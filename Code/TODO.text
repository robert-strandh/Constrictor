c = code
x = not supplied
d = documentation
m = compiler macro
n = no compiler macro required.
t = test

xd__ consp
cd__ atom
c___ caar....
cd__ first, second, ...
cdnt copy-tree
cd_t sublis
cd_t nsublis
cdnt subst
cdnt subst-if
cdnt subst-if-not
c__t nsubst
c__t nsubst-if
c__t nsubst-if-not
c_mt tree-equal
cdnt copy-list
cdmt list
c_mt list*
cdnt list-length
cdn_ listp
cdnt make-list
cdnt push
cdnt pop
cdnt nth
cdnt endp
cdn_ null
cd_t nconc
cdmt append
cdnt revappend
cdnt nreconc
cdnt butlast
____ nbutlast
cdnt last
cdnt ldiff
cdnt tailp
cdnt nthcdr
cdnt member
cdnt member-if
cdnt member-if-not
cdmt mapc
cdnt mapcar
cdnt mapcan
cdmt mapl
cdnt maplist
cdnt mapcon
cdnt acons
cdmt assoc
cdmt assoc-if
cdmt assoc-if-not
cdnt copy-alist
cdnt pairlis
cdmt rassoc
cdmt rassoc-if
cdmt rassoc-if-not
____ get-properties
c_nt getf
c_nt remf
cdmt intersection
cdmt nintersection
cdmt adjoin
c___ pushnew
cdmt set-difference
cdmt nset-difference
c_mt set-exclusive-or
c_mt nset-exclusive-or
c_mt subsetp
cdmt union
c_mt nunion
