c = code
d = documentation
m = compiler macro
n = no compiler macro required.
t = test

cd   consp
cd   atom
c    caar....
cd   first, second, ...
c    copy-tree
cd   sublis
cd   nsublis
cdt  subst
cdt  subst-if
cd   subst-if-not
c    nsubst
c    nsubst-if
c    nsubst-if-not
c    tree-equal
cd   copy-list
cdm  list
cm   list*
cdnt list-length
cd   listp
cd   make-list
cd   push
cd   pop
cd   nth
cdnt endp
cdn  null
cd   nconc
cdmt append
cd   revappend
cd   nreconc
cdnt butlast
     nbutlast
cdnt last
c    ldiff
c    tailp
cdnt nthcdr
cd   member
cd   member-if
cd   member-if-not
cdmt mapc
cdnt mapcar
cdnt mapcan
cdmt mapl
cdnt maplist
cdnt mapcon
cdnt acons
cdmt assoc
cdmt assoc-if
cdmt assoc-if-not
cd   copy-alist
cdn  pairlis
cdmt rassoc
cdmt rassoc-if
cdmt rassoc-if-not
     get-properties
c    getf
c    remf
cd   intersection
cd   nintersection
cm   adjoin
c    pushnew
cd   set-difference
cd   nset-difference
c    set-exclusive-or
c    nset-exclusive-or
c    subsetp
cd   union
c    nunion
