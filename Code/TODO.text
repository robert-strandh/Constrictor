c = code
d = documentation
m = compiler macro

cd consp
cd atom
* caar....
cd first, second, ...
c copy-tree
cd sublis
cd nsublis
cd subst
c subst-if
c subst-if-not
c nsubst
c nsubst-if
c nsubst-if-not
c tree-equal
cd copy-list
cd list
c list*
cd list-length
cd listp
c make-list
cd push
cd pop
cd nth
c endp
c null
cd nconc
c append
cd revappend
cd nreconc
c butlast
nbutlast
c last
c ldiff
c tailp
c nthcdr
c member
c member-if
c member-if-not
cd mapc...
c acons
c assoc
c assoc-if
c assoc-if-not
cd copy-alist
c pairlis
c rassoc
c rassoc-if
c rassoc-if-not
get-properties
c getf
c remf
cd intersection
cd nintersection
c adjoin
c pushnew
cd set-difference
cd nset-difference
c set-exclusive-or
c nset-exclusive-or
c subsetp
cd union
c nunion
